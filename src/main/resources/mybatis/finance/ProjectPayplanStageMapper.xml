<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.damei.business.dao.finance.ProjectPayplanStageDao">

    <resultMap id="BaseResultMap" type="cn.damei.business.entity.finance.ProjectPayplanStage">
        <id column="id" property="id" />
        <id column="stage_code" property="stageCode" />
        <id column="contract_code" property="contractCode" />
        <id column="contract_uuid" property="contractUuid" />
        <id column="stageidx" property="stageidx" />
        <id column="stage_template_id" property="stageTemplateId" />
        <id column="stage_template_code" property="stageTemplateCode" />
        <id column="expect_received" property="expectReceived" />
        <id column="actual_total_received" property="actualTotalReceived" />
        <id column="ago_unpay_amount" property="agoUnpayAmount" />
        <id column="start_time" property="startTime" />
        <id column="stage_finished" property="stageFinished" />
        <id column="finish_time" property="finishTime" />
        <id column="finish_mode" property="finishMode" />
        <id column="finish_operator" property="finishOperator" />
        <id column="curent_flag" property="curentFlag" />
        <id column="prev_stage_code" property="prevStageCode" />
        <id column="next_stage_code" property="nextStageCode" />
        <id column="stage_type" property="stageType" />
        <id column="stage_name" property="stageName" />
        <id column="plan_template_code" property="payPlanTemplateCode" />
    </resultMap>

    <sql id="Base_Column_List">
        id,stage_code,contract_code,contract_uuid,stageidx,stage_template_id,stage_template_code,
        IFNULL(expect_received,0) AS expect_received,IFNULL(actual_total_received,0) AS actual_total_received,
        IFNULL(ago_unpay_amount,0) AS ago_unpay_amount,start_time,stage_finished,finish_time,finish_mode,
        finish_operator,curent_flag,prev_stage_code,next_stage_code,stage_type,stage_name,plan_template_code
    </sql>


    <select id="getProjectFirstStage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM fina_project_payplan_stage
        WHERE stg.contract_uuid=#{contractUuid} ORDER BY stageidx LIMIT 1
    </select>


    <select id="getProjectStageWithStageCode" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM fina_project_payplan_stage
        WHERE stg.contract_uuid=#{contractUuid} AND stage_template_code=#{stageCode} LIMIT 1
    </select>


    <select id="getProjectCurrentStage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM fina_project_payplan_stage
        WHERE contract_uuid=#{contractUuid} AND curent_flag=1 LIMIT 1
    </select>


    <insert id="insert" parameterType="cn.damei.business.entity.finance.ProjectPayplanStage">
        INSERT INTO fina_project_payplan_stage(stage_code,contract_code,contract_uuid,stageidx,stage_template_id,
        stage_template_code,expect_received,actual_total_received,ago_unpay_amount,start_time,stage_finished,finish_time,finish_mode,
        finish_operator,curent_flag,prev_stage_code,next_stage_code,stage_type,stage_name,plan_template_code
        ) VALUES (#{stageCode},#{contractCode},#{contractUuid},#{stageidx},
            #{stageTemplateId},#{stageTemplateCode},#{expectReceived},#{actualTotalReceived},#{agoUnpayAmount},#{startTime},
            #{stageFinished},#{finishTime},#{finishMode},#{finishOperator},#{curentFlag},#{prevStageCode},#{nextStageCode},
            #{stageType},#{stageName},#{payPlanTemplateCode})
    </insert>



    <insert id="insertProjectPayplanStageBatch">
        INSERT INTO fina_project_payplan_stage(stage_code,contract_code,contract_uuid,stageidx,stage_template_id,
        stage_template_code,expect_received,actual_total_received,ago_unpay_amount,start_time,stage_finished,finish_time,finish_mode,
        finish_operator,curent_flag,prev_stage_code,next_stage_code,stage_type,stage_name,plan_template_code
        ) VALUES
        <foreach collection="stageList" index="idx" item="payStage" separator=",">
            (#{payStage.stageCode},#{payStage.contractCode},#{payStage.contractUuid},#{payStage.stageidx},
            #{payStage.stageTemplateId},#{payStage.stageTemplateCode},#{payStage.expectReceived},#{payStage.actualTotalReceived}
            ,#{payStage.agoUnpayAmount},#{payStage.startTime},
            #{payStage.stageFinished},#{payStage.finishTime},#{payStage.finishMode},#{payStage.finishOperator},
            #{payStage.curentFlag},#{payStage.prevStageCode},#{payStage.nextStageCode},#{payStage.stageType}
            ,#{payStage.stageName},#{payStage.payPlanTemplateCode})
        </foreach>
    </insert>

    <select id="paymentPlanDetail" resultType="java.util.HashMap">
        SELECT
        start_time AS startTime,
        stage_finished AS stageFinished,
        fpi.item_name AS itemName,
        fps.expect_received AS expectReceived,
        fpi.fina_trans_rate AS finaTransRate
        FROM
        fina_project_payplan_stage fps
        LEFT JOIN fina_payplan_item fpi ON fpi.id = fps.stage_template_id
        <where>
            fps.contract_uuid = #{contractUuid}
        </where>
    </select>

    <select id="getPushAmount" resultType="java.util.HashMap">
        SELECT fps.finish_mode,
        CASE fps.stage_template_code
        WHEN "NODE_MEDIUM" THEN
        "401"
        WHEN "NODE_FINAL" THEN
        "402"
        END AS type,
        CASE fps.finish_mode
        WHEN "SYSTEM" THEN
        if(fps.actual_total_received >= fps.expect_received,"10","20")
        WHEN "MANUAL" THEN "30"
        END AS paymentStatus,
        fps.actual_total_received AS amount,
        finish_time AS time,
        fps.contract_code AS orderId
        FROM
        fina_project_payplan_stage fps
        LEFT JOIN fina_payplan_item fpi ON fps.stage_template_id = fpi.id
        <where>
            fpi.need_mps_push = 1 AND
            fps.stage_template_code = #{stageTemplateCode} AND
            fps.contract_code = #{contractCode}
        </where>
    </select>


    <select id="search" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM fina_project_payplan_stage
        <where>
            1=1
            <if test="stageCode != null">
                AND stage_code=#{stageCode}
            </if>
            <if test="itemTempCode != null">
                AND stage_template_code=#{itemTempCode}
            </if>
            <if test="contractUuid != null">
                AND contract_uuid=#{contractUuid}
            </if>
        </where>
    </select>

    <select id="findProjectStage" resultType="java.util.HashMap">
        SELECT
            fpps.contract_uuid,
            fpps.contract_code,
            fpps.stage_name,
            fpps.stage_code,
            cus.`name`,
            cus.mobile
        FROM
            fina_project_payplan_stage fpps
        LEFT JOIN customer_contract cc ON fpps.contract_code = cc.contract_code
        LEFT JOIN customer cus ON cus.id = cc.customer_id
        <where>
            fpps.contract_uuid = #{contractUuid} AND fpps.curent_flag = 1
        </where>
        LIMIT 1
    </select>




    <update id="update" parameterType="cn.damei.business.entity.finance.ProjectPayplanStage">
        UPDATE fina_project_payplan_stage
        <set>
            <if test="actualTotalReceived != null">
                actual_total_received = #{actualTotalReceived},
            </if>
            <if test="agoUnpayAmount != null">
                ago_unpay_amount = #{agoUnpayAmount},
            </if>
            <if test="startTime != null">
                start_time = #{startTime},
            </if>
            <if test="stageFinished != null">
                stage_finished = #{stageFinished},
            </if>
            <if test="finishTime != null">
                finish_time = #{finishTime},
            </if>
            <if test="finishMode != null">
                finish_mode = #{finishMode},
            </if>
            <if test="finishOperator != null">
                finish_operator = #{finishOperator},
            </if>
            <if test="curentFlag != null">
                curent_flag = #{curentFlag},
            </if>
            <if test="prevStageCode != null">
                prev_stage_code = #{prevStageCode},
            </if>
            <if test="nextStageCode != null">
                next_stage_code = #{nextStageCode},
            </if>
        </set>
        where stage_code = #{stageCode}
    </update>

    <select id="getStageByContractCode" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT
        fps.*
        FROM
        fina_project_payplan_stage fps
        LEFT JOIN fina_payplan_item fpi ON fpi.id = fps.stage_template_id
        <where>
        <if test="codeList != null">
            AND fps.contract_code IN
            <foreach collection="codeList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        </where>
    </select>

    <select id="getStageTemplateCode" resultType="map" parameterType="String">
        SELECT DISTINCT
            fps.stage_template_code AS stageTemplateCode
        FROM fina_project_payplan_stage fps
        LEFT JOIN customer_contract con  ON fps.contract_code = con.contract_code
        WHERE con.store_code=#{storeCode}
    </select>

</mapper>